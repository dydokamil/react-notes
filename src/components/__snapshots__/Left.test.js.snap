// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Left component should match the snapshot 1`] = `
ReactWrapper {
  "length": 1,
  Symbol(enzyme.__unrendered__): <Left
    notes={
        Object {
            "notes": Array [
              Object {
                "_id": 0,
                "edited": "2011-08-12T20:17:46.384Z",
              },
              Object {
                "_id": 1,
                "edited": "2011-08-12T20:17:46.384Z",
              },
            ],
          }
    }
    onFetchNotes={[Function]}
    onNewNote={[Function]}
    onRemoveNote={[Function]}
    onSelectNote={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": Left {
      "_reactInternalFiber": FiberNode {
        "_debugID": 4,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": FiberNode {
          "_debugID": 3,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "alternate": null,
          "child": [Circular],
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": [Circular],
          "index": 0,
          "internalContextTag": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "notes": Object {
                "notes": Array [
                  Object {
                    "_id": 0,
                    "edited": "2011-08-12T20:17:46.384Z",
                  },
                  Object {
                    "_id": 1,
                    "edited": "2011-08-12T20:17:46.384Z",
                  },
                ],
              },
              "onFetchNotes": [Function],
              "onNewNote": [Function],
              "onRemoveNote": [Function],
              "onSelectNote": [Function],
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "notes": Object {
                "notes": Array [
                  Object {
                    "_id": 0,
                    "edited": "2011-08-12T20:17:46.384Z",
                  },
                  Object {
                    "_id": 1,
                    "edited": "2011-08-12T20:17:46.384Z",
                  },
                ],
              },
              "onFetchNotes": [Function],
              "onNewNote": [Function],
              "onRemoveNote": [Function],
              "onSelectNote": [Function],
            },
          },
          "nextEffect": null,
          "pendingProps": null,
          "ref": null,
          "return": FiberNode {
            "_debugID": 1,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": [Circular],
              "child": null,
              "effectTag": 0,
              "expirationTime": 1,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                                    <div
                                                      id="add-remove-navbar"
                                                      class="my-navbar"
                                    >
                                                      <button
                                                                        id="new-note-button"
                                                      >
                                                                        <i
                                                                                          class="fas fa-plus"
                                                                        />
                                                      </button>
                                                      <button
                                                                        id="remove-note-button"
                                                      >
                                                                        <i
                                                                                          class="fas fa-trash-alt"
                                                                        />
                                                      </button>
                                    </div>
                                    <div
                                                      id="notes-list"
                                    >
                                                      <div
                                                                        class="note note-hoverable"
                                                      >
                                                                        <div
                                                                                          class="note-name"
                                                                        >
                                                                                          <span
                                                                                                            style="font-style: italic; font-weight: 100;"
                                                                                          >
                                                                                                            no title
                                                                                          </span>
                                                                        </div>
                                                                        <div
                                                                                          class="note-date-preview"
                                                                        >
                                                                                          2011-08-12 20:17:46
                                                                        </div>
                                                      </div>
                                                      <div
                                                                        class="note note-hoverable"
                                                      >
                                                                        <div
                                                                                          class="note-name"
                                                                        >
                                                                                          <span
                                                                                                            style="font-style: italic; font-weight: 100;"
                                                                                          >
                                                                                                            no title
                                                                                          </span>
                                                                        </div>
                                                                        <div
                                                                                          class="note-date-preview"
                                                                        >
                                                                                          2011-08-12 20:17:46
                                                                        </div>
                                                      </div>
                                    </div>
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "finishedWork": null,
                "hydrate": false,
                "isReadyForCommit": false,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "callbackList": null,
                "expirationTime": 1,
                "first": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "isForced": false,
                  "isReplace": false,
                  "next": null,
                  "nextCallback": null,
                  "partialState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "notes": Object {
                                                                    "notes": Array [
                                                                      Object {
                                                                        "_id": 0,
                                                                        "edited": "2011-08-12T20:17:46.384Z",
                                                                      },
                                                                      Object {
                                                                        "_id": 1,
                                                                        "edited": "2011-08-12T20:17:46.384Z",
                                                                      },
                                                                    ],
                                                                  },
                                                                  "onFetchNotes": [Function],
                                                                  "onNewNote": [Function],
                                                                  "onRemoveNote": [Function],
                                                                  "onSelectNote": [Function],
                                                                }
                      }
/>,
                  },
                },
                "hasForceUpdate": false,
                "isInitialized": false,
                "isProcessing": false,
                "last": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "isForced": false,
                  "isReplace": false,
                  "next": null,
                  "nextCallback": null,
                  "partialState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "notes": Object {
                                                                    "notes": Array [
                                                                      Object {
                                                                        "_id": 0,
                                                                        "edited": "2011-08-12T20:17:46.384Z",
                                                                      },
                                                                      Object {
                                                                        "_id": 1,
                                                                        "edited": "2011-08-12T20:17:46.384Z",
                                                                      },
                                                                    ],
                                                                  },
                                                                  "onFetchNotes": [Function],
                                                                  "onNewNote": [Function],
                                                                  "onRemoveNote": [Function],
                                                                  "onSelectNote": [Function],
                                                                }
                      }
/>,
                  },
                },
              },
            },
            "child": [Circular],
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                                Object {
                                                "notes": Object {
                                                  "notes": Array [
                                                    Object {
                                                      "_id": 0,
                                                      "edited": "2011-08-12T20:17:46.384Z",
                                                    },
                                                    Object {
                                                      "_id": 1,
                                                      "edited": "2011-08-12T20:17:46.384Z",
                                                    },
                                                  ],
                                                },
                                                "onFetchNotes": [Function],
                                                "onNewNote": [Function],
                                                "onRemoveNote": [Function],
                                                "onSelectNote": [Function],
                                              }
                }
/>,
            },
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div>
                                <div
                                                id="add-remove-navbar"
                                                class="my-navbar"
                                >
                                                <button
                                                                id="new-note-button"
                                                >
                                                                <i
                                                                                class="fas fa-plus"
                                                                />
                                                </button>
                                                <button
                                                                id="remove-note-button"
                                                >
                                                                <i
                                                                                class="fas fa-trash-alt"
                                                                />
                                                </button>
                                </div>
                                <div
                                                id="notes-list"
                                >
                                                <div
                                                                class="note note-hoverable"
                                                >
                                                                <div
                                                                                class="note-name"
                                                                >
                                                                                <span
                                                                                                style="font-style: italic; font-weight: 100;"
                                                                                >
                                                                                                no title
                                                                                </span>
                                                                </div>
                                                                <div
                                                                                class="note-date-preview"
                                                                >
                                                                                2011-08-12 20:17:46
                                                                </div>
                                                </div>
                                                <div
                                                                class="note note-hoverable"
                                                >
                                                                <div
                                                                                class="note-name"
                                                                >
                                                                                <span
                                                                                                style="font-style: italic; font-weight: 100;"
                                                                                >
                                                                                                no title
                                                                                </span>
                                                                </div>
                                                                <div
                                                                                class="note-date-preview"
                                                                >
                                                                                2011-08-12 20:17:46
                                                                </div>
                                                </div>
                                </div>
                </div>
</div>,
              "context": Object {},
              "current": [Circular],
              "finishedWork": null,
              "hydrate": false,
              "isReadyForCommit": false,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingContext": null,
              "remainingExpirationTime": 0,
            },
            "tag": 3,
            "type": null,
            "updateQueue": null,
          },
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "notes": Object {
                  "notes": Array [
                    Object {
                      "_id": 0,
                      "edited": "2011-08-12T20:17:46.384Z",
                    },
                    Object {
                      "_id": 1,
                      "edited": "2011-08-12T20:17:46.384Z",
                    },
                  ],
                },
                "onFetchNotes": [Function],
                "onNewNote": [Function],
                "onRemoveNote": [Function],
                "onSelectNote": [Function],
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "notes": Object {
                  "notes": Array [
                    Object {
                      "_id": 0,
                      "edited": "2011-08-12T20:17:46.384Z",
                    },
                    Object {
                      "_id": 1,
                      "edited": "2011-08-12T20:17:46.384Z",
                    },
                  ],
                },
                "onFetchNotes": [Function],
                "onNewNote": [Function],
                "onRemoveNote": [Function],
                "onSelectNote": [Function],
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "alternate": null,
        "child": FiberNode {
          "_debugID": 5,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": Object {
            "fileName": "/Users/kamildydo/Projects/react-redux-projects/notes/src/components/Left.js",
            "lineNumber": 24,
          },
          "alternate": null,
          "child": FiberNode {
            "_debugID": 6,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/kamildydo/Projects/react-redux-projects/notes/src/components/Left.js",
              "lineNumber": 26,
            },
            "alternate": null,
            "child": FiberNode {
              "_debugID": 8,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/kamildydo/Projects/react-redux-projects/notes/src/components/Navbar.js",
                "lineNumber": 5,
              },
              "alternate": null,
              "child": FiberNode {
                "_debugID": 9,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/kamildydo/Projects/react-redux-projects/notes/src/components/Navbar.js",
                  "lineNumber": 6,
                },
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 11,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/kamildydo/Projects/react-redux-projects/notes/src/components/Navbar.js",
                    "lineNumber": 7,
                  },
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "className": "fas fa-plus",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <i
                    class="fas fa-plus"
/>,
                  "tag": 5,
                  "type": "i",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <i
                    className="fas fa-plus"
/>,
                  "id": "new-note-button",
                  "onClick": [Function],
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 10,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/kamildydo/Projects/react-redux-projects/notes/src/components/Navbar.js",
                    "lineNumber": 9,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 12,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/kamildydo/Projects/react-redux-projects/notes/src/components/Navbar.js",
                      "lineNumber": 10,
                    },
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "className": "fas fa-trash-alt",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <i
                      class="fas fa-trash-alt"
/>,
                    "tag": 5,
                    "type": "i",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <i
                      className="fas fa-trash-alt"
/>,
                    "id": "remove-note-button",
                    "onClick": [Function],
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <button
                    id="remove-note-button"
>
                    <i
                                        class="fas fa-trash-alt"
                    />
</button>,
                  "tag": 5,
                  "type": "button",
                  "updateQueue": null,
                },
                "stateNode": <button
                  id="new-note-button"
>
                  <i
                                    class="fas fa-plus"
                  />
</button>,
                "tag": 5,
                "type": "button",
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <button
                    id="new-note-button"
                    onClick={[Function]}
>
                    <i
                                        className="fas fa-plus"
                    />
</button>,
                  <button
                    id="remove-note-button"
                    onClick={[Function]}
>
                    <i
                                        className="fas fa-trash-alt"
                    />
</button>,
                ],
                "className": "my-navbar",
                "id": "add-remove-navbar",
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": [Circular],
              "sibling": null,
              "stateNode": <div
                id="add-remove-navbar"
                class="my-navbar"
>
                <button
                                id="new-note-button"
                >
                                <i
                                                class="fas fa-plus"
                                />
                </button>
                <button
                                id="remove-note-button"
                >
                                <i
                                                class="fas fa-trash-alt"
                                />
                </button>
</div>,
              "tag": 5,
              "type": "div",
              "updateQueue": null,
            },
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "onNewNote": [Function],
              "onRemoveNote": [Function],
              "onUpdateNote": undefined,
            },
            "memoizedState": null,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": [Circular],
            "sibling": FiberNode {
              "_debugID": 7,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/kamildydo/Projects/react-redux-projects/notes/src/components/Left.js",
                "lineNumber": 32,
              },
              "alternate": null,
              "child": FiberNode {
                "_debugID": 13,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/kamildydo/Projects/react-redux-projects/notes/src/components/Left.js",
                  "lineNumber": 34,
                },
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 15,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/kamildydo/Projects/react-redux-projects/notes/src/components/Left.js",
                    "lineNumber": 43,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 17,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/kamildydo/Projects/react-redux-projects/notes/src/components/Left.js",
                      "lineNumber": 47,
                    },
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "no title",
                      "style": Object {
                        "fontStyle": "italic",
                        "fontWeight": 100,
                      },
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <span
                      style="font-style: italic; font-weight: 100;"
>
                      no title
</span>,
                    "tag": 5,
                    "type": "span",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <span
                      style={
                                            Object {
                                                                  "fontStyle": "italic",
                                                                  "fontWeight": 100,
                                                                }
                      }
>
                      no title
</span>,
                    "className": "note-name",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 16,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/kamildydo/Projects/react-redux-projects/notes/src/components/Left.js",
                      "lineNumber": 52,
                    },
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "2011-08-12 20:17:46",
                      "className": "note-date-preview",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <div
                      class="note-date-preview"
>
                      2011-08-12 20:17:46
</div>,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <div
                    class="note-name"
>
                    <span
                                        style="font-style: italic; font-weight: 100;"
                    >
                                        no title
                    </span>
</div>,
                  "tag": 5,
                  "type": "div",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": "0",
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <div
                      className="note-name"
>
                      <span
                                            style={
                                                                  Object {
                                                                                        "fontStyle": "italic",
                                                                                        "fontWeight": 100,
                                                                                      }
                                            }
                      >
                                            no title
                      </span>
</div>,
                    <div
                      className="note-date-preview"
>
                      2011-08-12 20:17:46
</div>,
                  ],
                  "className": "note note-hoverable",
                  "onClick": [Function],
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 14,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/kamildydo/Projects/react-redux-projects/notes/src/components/Left.js",
                    "lineNumber": 34,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 18,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/kamildydo/Projects/react-redux-projects/notes/src/components/Left.js",
                      "lineNumber": 43,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 20,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/kamildydo/Projects/react-redux-projects/notes/src/components/Left.js",
                        "lineNumber": 47,
                      },
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "no title",
                        "style": Object {
                          "fontStyle": "italic",
                          "fontWeight": 100,
                        },
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <span
                        style="font-style: italic; font-weight: 100;"
>
                        no title
</span>,
                      "tag": 5,
                      "type": "span",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <span
                        style={
                                                Object {
                                                                        "fontStyle": "italic",
                                                                        "fontWeight": 100,
                                                                      }
                        }
>
                        no title
</span>,
                      "className": "note-name",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": FiberNode {
                      "_debugID": 19,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/kamildydo/Projects/react-redux-projects/notes/src/components/Left.js",
                        "lineNumber": 52,
                      },
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "2011-08-12 20:17:46",
                        "className": "note-date-preview",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <div
                        class="note-date-preview"
>
                        2011-08-12 20:17:46
</div>,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <div
                      class="note-name"
>
                      <span
                                            style="font-style: italic; font-weight: 100;"
                      >
                                            no title
                      </span>
</div>,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "internalContextTag": 0,
                  "key": "1",
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <div
                        className="note-name"
>
                        <span
                                                style={
                                                                        Object {
                                                                                                "fontStyle": "italic",
                                                                                                "fontWeight": 100,
                                                                                              }
                                                }
                        >
                                                no title
                        </span>
</div>,
                      <div
                        className="note-date-preview"
>
                        2011-08-12 20:17:46
</div>,
                    ],
                    "className": "note note-hoverable",
                    "onClick": [Function],
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <div
                    class="note note-hoverable"
>
                    <div
                                        class="note-name"
                    >
                                        <span
                                                            style="font-style: italic; font-weight: 100;"
                                        >
                                                            no title
                                        </span>
                    </div>
                    <div
                                        class="note-date-preview"
                    >
                                        2011-08-12 20:17:46
                    </div>
</div>,
                  "tag": 5,
                  "type": "div",
                  "updateQueue": null,
                },
                "stateNode": <div
                  class="note note-hoverable"
>
                  <div
                                    class="note-name"
                  >
                                    <span
                                                      style="font-style: italic; font-weight: 100;"
                                    >
                                                      no title
                                    </span>
                  </div>
                  <div
                                    class="note-date-preview"
                  >
                                    2011-08-12 20:17:46
                  </div>
</div>,
                "tag": 5,
                "type": "div",
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 1,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <div
                    className="note note-hoverable"
                    onClick={[Function]}
>
                    <div
                                        className="note-name"
                    >
                                        <span
                                                            style={
                                                                                Object {
                                                                                                    "fontStyle": "italic",
                                                                                                    "fontWeight": 100,
                                                                                                  }
                                                            }
                                        >
                                                            no title
                                        </span>
                    </div>
                    <div
                                        className="note-date-preview"
                    >
                                        2011-08-12 20:17:46
                    </div>
</div>,
                  <div
                    className="note note-hoverable"
                    onClick={[Function]}
>
                    <div
                                        className="note-name"
                    >
                                        <span
                                                            style={
                                                                                Object {
                                                                                                    "fontStyle": "italic",
                                                                                                    "fontWeight": 100,
                                                                                                  }
                                                            }
                                        >
                                                            no title
                                        </span>
                    </div>
                    <div
                                        className="note-date-preview"
                    >
                                        2011-08-12 20:17:46
                    </div>
</div>,
                ],
                "id": "notes-list",
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": [Circular],
              "sibling": null,
              "stateNode": <div
                id="notes-list"
>
                <div
                                class="note note-hoverable"
                >
                                <div
                                                class="note-name"
                                >
                                                <span
                                                                style="font-style: italic; font-weight: 100;"
                                                >
                                                                no title
                                                </span>
                                </div>
                                <div
                                                class="note-date-preview"
                                >
                                                2011-08-12 20:17:46
                                </div>
                </div>
                <div
                                class="note note-hoverable"
                >
                                <div
                                                class="note-name"
                                >
                                                <span
                                                                style="font-style: italic; font-weight: 100;"
                                                >
                                                                no title
                                                </span>
                                </div>
                                <div
                                                class="note-date-preview"
                                >
                                                2011-08-12 20:17:46
                                </div>
                </div>
</div>,
              "tag": 5,
              "type": "div",
              "updateQueue": null,
            },
            "stateNode": null,
            "tag": 1,
            "type": [Function],
            "updateQueue": null,
          },
          "effectTag": 0,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "internalContextTag": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": Array [
              <Unknown
                onNewNote={[Function]}
                onRemoveNote={[Function]}
                onUpdateNote={undefined}
/>,
              <div
                id="notes-list"
>
                <div
                                className="note note-hoverable"
                                onClick={[Function]}
                >
                                <div
                                                className="note-name"
                                >
                                                <span
                                                                style={
                                                                                Object {
                                                                                                "fontStyle": "italic",
                                                                                                "fontWeight": 100,
                                                                                              }
                                                                }
                                                >
                                                                no title
                                                </span>
                                </div>
                                <div
                                                className="note-date-preview"
                                >
                                                2011-08-12 20:17:46
                                </div>
                </div>
                <div
                                className="note note-hoverable"
                                onClick={[Function]}
                >
                                <div
                                                className="note-name"
                                >
                                                <span
                                                                style={
                                                                                Object {
                                                                                                "fontStyle": "italic",
                                                                                                "fontWeight": 100,
                                                                                              }
                                                                }
                                                >
                                                                no title
                                                </span>
                                </div>
                                <div
                                                className="note-date-preview"
                                >
                                                2011-08-12 20:17:46
                                </div>
                </div>
</div>,
            ],
            "className": undefined,
          },
          "memoizedState": null,
          "nextEffect": null,
          "pendingProps": null,
          "ref": null,
          "return": [Circular],
          "sibling": null,
          "stateNode": <div>
            <div
                        id="add-remove-navbar"
                        class="my-navbar"
            >
                        <button
                                    id="new-note-button"
                        >
                                    <i
                                                class="fas fa-plus"
                                    />
                        </button>
                        <button
                                    id="remove-note-button"
                        >
                                    <i
                                                class="fas fa-trash-alt"
                                    />
                        </button>
            </div>
            <div
                        id="notes-list"
            >
                        <div
                                    class="note note-hoverable"
                        >
                                    <div
                                                class="note-name"
                                    >
                                                <span
                                                            style="font-style: italic; font-weight: 100;"
                                                >
                                                            no title
                                                </span>
                                    </div>
                                    <div
                                                class="note-date-preview"
                                    >
                                                2011-08-12 20:17:46
                                    </div>
                        </div>
                        <div
                                    class="note note-hoverable"
                        >
                                    <div
                                                class="note-name"
                                    >
                                                <span
                                                            style="font-style: italic; font-weight: 100;"
                                                >
                                                            no title
                                                </span>
                                    </div>
                                    <div
                                                class="note-date-preview"
                                    >
                                                2011-08-12 20:17:46
                                    </div>
                        </div>
            </div>
</div>,
          "tag": 5,
          "type": "div",
          "updateQueue": null,
        },
        "effectTag": 5,
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "internalContextTag": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "notes": Object {
            "notes": Array [
              Object {
                "_id": 0,
                "edited": "2011-08-12T20:17:46.384Z",
              },
              Object {
                "_id": 1,
                "edited": "2011-08-12T20:17:46.384Z",
              },
            ],
          },
          "onFetchNotes": [Function],
          "onNewNote": [Function],
          "onRemoveNote": [Function],
          "onSelectNote": [Function],
        },
        "memoizedState": null,
        "nextEffect": null,
        "pendingProps": null,
        "ref": null,
        "return": FiberNode {
          "_debugID": 3,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "alternate": null,
          "child": [Circular],
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": [Circular],
          "index": 0,
          "internalContextTag": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "notes": Object {
                "notes": Array [
                  Object {
                    "_id": 0,
                    "edited": "2011-08-12T20:17:46.384Z",
                  },
                  Object {
                    "_id": 1,
                    "edited": "2011-08-12T20:17:46.384Z",
                  },
                ],
              },
              "onFetchNotes": [Function],
              "onNewNote": [Function],
              "onRemoveNote": [Function],
              "onSelectNote": [Function],
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "notes": Object {
                "notes": Array [
                  Object {
                    "_id": 0,
                    "edited": "2011-08-12T20:17:46.384Z",
                  },
                  Object {
                    "_id": 1,
                    "edited": "2011-08-12T20:17:46.384Z",
                  },
                ],
              },
              "onFetchNotes": [Function],
              "onNewNote": [Function],
              "onRemoveNote": [Function],
              "onSelectNote": [Function],
            },
          },
          "nextEffect": null,
          "pendingProps": null,
          "ref": null,
          "return": FiberNode {
            "_debugID": 1,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": [Circular],
              "child": null,
              "effectTag": 0,
              "expirationTime": 1,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                                    <div
                                                      id="add-remove-navbar"
                                                      class="my-navbar"
                                    >
                                                      <button
                                                                        id="new-note-button"
                                                      >
                                                                        <i
                                                                                          class="fas fa-plus"
                                                                        />
                                                      </button>
                                                      <button
                                                                        id="remove-note-button"
                                                      >
                                                                        <i
                                                                                          class="fas fa-trash-alt"
                                                                        />
                                                      </button>
                                    </div>
                                    <div
                                                      id="notes-list"
                                    >
                                                      <div
                                                                        class="note note-hoverable"
                                                      >
                                                                        <div
                                                                                          class="note-name"
                                                                        >
                                                                                          <span
                                                                                                            style="font-style: italic; font-weight: 100;"
                                                                                          >
                                                                                                            no title
                                                                                          </span>
                                                                        </div>
                                                                        <div
                                                                                          class="note-date-preview"
                                                                        >
                                                                                          2011-08-12 20:17:46
                                                                        </div>
                                                      </div>
                                                      <div
                                                                        class="note note-hoverable"
                                                      >
                                                                        <div
                                                                                          class="note-name"
                                                                        >
                                                                                          <span
                                                                                                            style="font-style: italic; font-weight: 100;"
                                                                                          >
                                                                                                            no title
                                                                                          </span>
                                                                        </div>
                                                                        <div
                                                                                          class="note-date-preview"
                                                                        >
                                                                                          2011-08-12 20:17:46
                                                                        </div>
                                                      </div>
                                    </div>
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "finishedWork": null,
                "hydrate": false,
                "isReadyForCommit": false,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "callbackList": null,
                "expirationTime": 1,
                "first": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "isForced": false,
                  "isReplace": false,
                  "next": null,
                  "nextCallback": null,
                  "partialState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "notes": Object {
                                                                    "notes": Array [
                                                                      Object {
                                                                        "_id": 0,
                                                                        "edited": "2011-08-12T20:17:46.384Z",
                                                                      },
                                                                      Object {
                                                                        "_id": 1,
                                                                        "edited": "2011-08-12T20:17:46.384Z",
                                                                      },
                                                                    ],
                                                                  },
                                                                  "onFetchNotes": [Function],
                                                                  "onNewNote": [Function],
                                                                  "onRemoveNote": [Function],
                                                                  "onSelectNote": [Function],
                                                                }
                      }
/>,
                  },
                },
                "hasForceUpdate": false,
                "isInitialized": false,
                "isProcessing": false,
                "last": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "isForced": false,
                  "isReplace": false,
                  "next": null,
                  "nextCallback": null,
                  "partialState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "notes": Object {
                                                                    "notes": Array [
                                                                      Object {
                                                                        "_id": 0,
                                                                        "edited": "2011-08-12T20:17:46.384Z",
                                                                      },
                                                                      Object {
                                                                        "_id": 1,
                                                                        "edited": "2011-08-12T20:17:46.384Z",
                                                                      },
                                                                    ],
                                                                  },
                                                                  "onFetchNotes": [Function],
                                                                  "onNewNote": [Function],
                                                                  "onRemoveNote": [Function],
                                                                  "onSelectNote": [Function],
                                                                }
                      }
/>,
                  },
                },
              },
            },
            "child": [Circular],
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                                Object {
                                                "notes": Object {
                                                  "notes": Array [
                                                    Object {
                                                      "_id": 0,
                                                      "edited": "2011-08-12T20:17:46.384Z",
                                                    },
                                                    Object {
                                                      "_id": 1,
                                                      "edited": "2011-08-12T20:17:46.384Z",
                                                    },
                                                  ],
                                                },
                                                "onFetchNotes": [Function],
                                                "onNewNote": [Function],
                                                "onRemoveNote": [Function],
                                                "onSelectNote": [Function],
                                              }
                }
/>,
            },
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div>
                                <div
                                                id="add-remove-navbar"
                                                class="my-navbar"
                                >
                                                <button
                                                                id="new-note-button"
                                                >
                                                                <i
                                                                                class="fas fa-plus"
                                                                />
                                                </button>
                                                <button
                                                                id="remove-note-button"
                                                >
                                                                <i
                                                                                class="fas fa-trash-alt"
                                                                />
                                                </button>
                                </div>
                                <div
                                                id="notes-list"
                                >
                                                <div
                                                                class="note note-hoverable"
                                                >
                                                                <div
                                                                                class="note-name"
                                                                >
                                                                                <span
                                                                                                style="font-style: italic; font-weight: 100;"
                                                                                >
                                                                                                no title
                                                                                </span>
                                                                </div>
                                                                <div
                                                                                class="note-date-preview"
                                                                >
                                                                                2011-08-12 20:17:46
                                                                </div>
                                                </div>
                                                <div
                                                                class="note note-hoverable"
                                                >
                                                                <div
                                                                                class="note-name"
                                                                >
                                                                                <span
                                                                                                style="font-style: italic; font-weight: 100;"
                                                                                >
                                                                                                no title
                                                                                </span>
                                                                </div>
                                                                <div
                                                                                class="note-date-preview"
                                                                >
                                                                                2011-08-12 20:17:46
                                                                </div>
                                                </div>
                                </div>
                </div>
</div>,
              "context": Object {},
              "current": [Circular],
              "finishedWork": null,
              "hydrate": false,
              "isReadyForCommit": false,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingContext": null,
              "remainingExpirationTime": 0,
            },
            "tag": 3,
            "type": null,
            "updateQueue": null,
          },
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "notes": Object {
                  "notes": Array [
                    Object {
                      "_id": 0,
                      "edited": "2011-08-12T20:17:46.384Z",
                    },
                    Object {
                      "_id": 1,
                      "edited": "2011-08-12T20:17:46.384Z",
                    },
                  ],
                },
                "onFetchNotes": [Function],
                "onNewNote": [Function],
                "onRemoveNote": [Function],
                "onSelectNote": [Function],
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "notes": Object {
                  "notes": Array [
                    Object {
                      "_id": 0,
                      "edited": "2011-08-12T20:17:46.384Z",
                    },
                    Object {
                      "_id": 1,
                      "edited": "2011-08-12T20:17:46.384Z",
                    },
                  ],
                },
                "onFetchNotes": [Function],
                "onNewNote": [Function],
                "onRemoveNote": [Function],
                "onSelectNote": [Function],
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "type": [Function],
          "updateQueue": null,
        },
        "sibling": null,
        "stateNode": [Circular],
        "tag": 2,
        "type": [Function],
        "updateQueue": null,
      },
      "_reactInternalInstance": Object {},
      "context": Object {},
      "onRemoveNoteWithParams": [Function],
      "props": Object {
        "notes": Object {
          "notes": Array [
            Object {
              "_id": 0,
              "edited": "2011-08-12T20:17:46.384Z",
            },
            Object {
              "_id": 1,
              "edited": "2011-08-12T20:17:46.384Z",
            },
          ],
        },
        "onFetchNotes": [Function],
        "onNewNote": [Function],
        "onRemoveNote": [Function],
        "onSelectNote": [Function],
      },
      "refs": Object {},
      "state": null,
      "updater": Object {
        "enqueueForceUpdate": [Function],
        "enqueueReplaceState": [Function],
        "enqueueSetState": [Function],
        "isMounted": [Function],
      },
    },
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "notes": Object {
        "notes": Array [
          Object {
            "_id": 0,
            "edited": "2011-08-12T20:17:46.384Z",
          },
          Object {
            "_id": 1,
            "edited": "2011-08-12T20:17:46.384Z",
          },
        ],
      },
      "onFetchNotes": [Function],
      "onNewNote": [Function],
      "onRemoveNote": [Function],
      "onSelectNote": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": <div>
        <div
                id="add-remove-navbar"
                class="my-navbar"
        >
                <button
                        id="new-note-button"
                >
                        <i
                                class="fas fa-plus"
                        />
                </button>
                <button
                        id="remove-note-button"
                >
                        <i
                                class="fas fa-trash-alt"
                        />
                </button>
        </div>
        <div
                id="notes-list"
        >
                <div
                        class="note note-hoverable"
                >
                        <div
                                class="note-name"
                        >
                                <span
                                        style="font-style: italic; font-weight: 100;"
                                >
                                        no title
                                </span>
                        </div>
                        <div
                                class="note-date-preview"
                        >
                                2011-08-12 20:17:46
                        </div>
                </div>
                <div
                        class="note note-hoverable"
                >
                        <div
                                class="note-name"
                        >
                                <span
                                        style="font-style: italic; font-weight: 100;"
                                >
                                        no title
                                </span>
                        </div>
                        <div
                                class="note-date-preview"
                        >
                                2011-08-12 20:17:46
                        </div>
                </div>
        </div>
</div>,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Unknown
            onNewNote={[Function]}
            onRemoveNote={[Function]}
            onUpdateNote={undefined}
/>,
          <div
            id="notes-list"
>
            <div
                        className="note note-hoverable"
                        onClick={[Function]}
            >
                        <div
                                    className="note-name"
                        >
                                    <span
                                                style={
                                                            Object {
                                                                        "fontStyle": "italic",
                                                                        "fontWeight": 100,
                                                                      }
                                                }
                                    >
                                                no title
                                    </span>
                        </div>
                        <div
                                    className="note-date-preview"
                        >
                                    2011-08-12 20:17:46
                        </div>
            </div>
            <div
                        className="note note-hoverable"
                        onClick={[Function]}
            >
                        <div
                                    className="note-name"
                        >
                                    <span
                                                style={
                                                            Object {
                                                                        "fontStyle": "italic",
                                                                        "fontWeight": 100,
                                                                      }
                                                }
                                    >
                                                no title
                                    </span>
                        </div>
                        <div
                                    className="note-date-preview"
                        >
                                    2011-08-12 20:17:46
                        </div>
            </div>
</div>,
        ],
        "className": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "onNewNote": [Function],
            "onRemoveNote": [Function],
            "onUpdateNote": undefined,
          },
          "ref": null,
          "rendered": Object {
            "instance": <div
              id="add-remove-navbar"
              class="my-navbar"
>
              <button
                            id="new-note-button"
              >
                            <i
                                          class="fas fa-plus"
                            />
              </button>
              <button
                            id="remove-note-button"
              >
                            <i
                                          class="fas fa-trash-alt"
                            />
              </button>
</div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <button
                  id="new-note-button"
                  onClick={[Function]}
>
                  <i
                                    className="fas fa-plus"
                  />
</button>,
                <button
                  id="remove-note-button"
                  onClick={[Function]}
>
                  <i
                                    className="fas fa-trash-alt"
                  />
</button>,
              ],
              "className": "my-navbar",
              "id": "add-remove-navbar",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <button
                  id="new-note-button"
>
                  <i
                                    class="fas fa-plus"
                  />
</button>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <i
                    className="fas fa-plus"
/>,
                  "id": "new-note-button",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": <i
                      class="fas fa-plus"
/>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "fas fa-plus",
                    },
                    "ref": null,
                    "rendered": Array [
                      undefined,
                    ],
                    "type": "i",
                  },
                ],
                "type": "button",
              },
              Object {
                "instance": <button
                  id="remove-note-button"
>
                  <i
                                    class="fas fa-trash-alt"
                  />
</button>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <i
                    className="fas fa-trash-alt"
/>,
                  "id": "remove-note-button",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": <i
                      class="fas fa-trash-alt"
/>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "fas fa-trash-alt",
                    },
                    "ref": null,
                    "rendered": Array [
                      undefined,
                    ],
                    "type": "i",
                  },
                ],
                "type": "button",
              },
            ],
            "type": "div",
          },
          "type": [Function],
        },
        Object {
          "instance": <div
            id="notes-list"
>
            <div
                        class="note note-hoverable"
            >
                        <div
                                    class="note-name"
                        >
                                    <span
                                                style="font-style: italic; font-weight: 100;"
                                    >
                                                no title
                                    </span>
                        </div>
                        <div
                                    class="note-date-preview"
                        >
                                    2011-08-12 20:17:46
                        </div>
            </div>
            <div
                        class="note note-hoverable"
            >
                        <div
                                    class="note-name"
                        >
                                    <span
                                                style="font-style: italic; font-weight: 100;"
                                    >
                                                no title
                                    </span>
                        </div>
                        <div
                                    class="note-date-preview"
                        >
                                    2011-08-12 20:17:46
                        </div>
            </div>
</div>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="note note-hoverable"
                onClick={[Function]}
>
                <div
                                className="note-name"
                >
                                <span
                                                style={
                                                                Object {
                                                                                "fontStyle": "italic",
                                                                                "fontWeight": 100,
                                                                              }
                                                }
                                >
                                                no title
                                </span>
                </div>
                <div
                                className="note-date-preview"
                >
                                2011-08-12 20:17:46
                </div>
</div>,
              <div
                className="note note-hoverable"
                onClick={[Function]}
>
                <div
                                className="note-name"
                >
                                <span
                                                style={
                                                                Object {
                                                                                "fontStyle": "italic",
                                                                                "fontWeight": 100,
                                                                              }
                                                }
                                >
                                                no title
                                </span>
                </div>
                <div
                                className="note-date-preview"
                >
                                2011-08-12 20:17:46
                </div>
</div>,
            ],
            "id": "notes-list",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <div
                class="note note-hoverable"
>
                <div
                                class="note-name"
                >
                                <span
                                                style="font-style: italic; font-weight: 100;"
                                >
                                                no title
                                </span>
                </div>
                <div
                                class="note-date-preview"
                >
                                2011-08-12 20:17:46
                </div>
</div>,
              "key": "0",
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="note-name"
>
                    <span
                                        style={
                                                            Object {
                                                                                "fontStyle": "italic",
                                                                                "fontWeight": 100,
                                                                              }
                                        }
                    >
                                        no title
                    </span>
</div>,
                  <div
                    className="note-date-preview"
>
                    2011-08-12 20:17:46
</div>,
                ],
                "className": "note note-hoverable",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <div
                    class="note-name"
>
                    <span
                                        style="font-style: italic; font-weight: 100;"
                    >
                                        no title
                    </span>
</div>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <span
                      style={
                                            Object {
                                                                  "fontStyle": "italic",
                                                                  "fontWeight": 100,
                                                                }
                      }
>
                      no title
</span>,
                    "className": "note-name",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": <span
                        style="font-style: italic; font-weight: 100;"
>
                        no title
</span>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "no title",
                        "style": Object {
                          "fontStyle": "italic",
                          "fontWeight": 100,
                        },
                      },
                      "ref": null,
                      "rendered": Array [
                        "no title",
                      ],
                      "type": "span",
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": <div
                    class="note-date-preview"
>
                    2011-08-12 20:17:46
</div>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "2011-08-12 20:17:46",
                    "className": "note-date-preview",
                  },
                  "ref": null,
                  "rendered": Array [
                    "2011-08-12 20:17:46",
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": <div
                class="note note-hoverable"
>
                <div
                                class="note-name"
                >
                                <span
                                                style="font-style: italic; font-weight: 100;"
                                >
                                                no title
                                </span>
                </div>
                <div
                                class="note-date-preview"
                >
                                2011-08-12 20:17:46
                </div>
</div>,
              "key": "1",
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="note-name"
>
                    <span
                                        style={
                                                            Object {
                                                                                "fontStyle": "italic",
                                                                                "fontWeight": 100,
                                                                              }
                                        }
                    >
                                        no title
                    </span>
</div>,
                  <div
                    className="note-date-preview"
>
                    2011-08-12 20:17:46
</div>,
                ],
                "className": "note note-hoverable",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <div
                    class="note-name"
>
                    <span
                                        style="font-style: italic; font-weight: 100;"
                    >
                                        no title
                    </span>
</div>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <span
                      style={
                                            Object {
                                                                  "fontStyle": "italic",
                                                                  "fontWeight": 100,
                                                                }
                      }
>
                      no title
</span>,
                    "className": "note-name",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": <span
                        style="font-style: italic; font-weight: 100;"
>
                        no title
</span>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "no title",
                        "style": Object {
                          "fontStyle": "italic",
                          "fontWeight": 100,
                        },
                      },
                      "ref": null,
                      "rendered": Array [
                        "no title",
                      ],
                      "type": "span",
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": <div
                    class="note-date-preview"
>
                    2011-08-12 20:17:46
</div>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "2011-08-12 20:17:46",
                    "className": "note-date-preview",
                  },
                  "ref": null,
                  "rendered": Array [
                    "2011-08-12 20:17:46",
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": Left {
        "_reactInternalFiber": FiberNode {
          "_debugID": 4,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": FiberNode {
            "_debugID": 3,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": null,
            "child": [Circular],
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "notes": Object {
                  "notes": Array [
                    Object {
                      "_id": 0,
                      "edited": "2011-08-12T20:17:46.384Z",
                    },
                    Object {
                      "_id": 1,
                      "edited": "2011-08-12T20:17:46.384Z",
                    },
                  ],
                },
                "onFetchNotes": [Function],
                "onNewNote": [Function],
                "onRemoveNote": [Function],
                "onSelectNote": [Function],
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "notes": Object {
                  "notes": Array [
                    Object {
                      "_id": 0,
                      "edited": "2011-08-12T20:17:46.384Z",
                    },
                    Object {
                      "_id": 1,
                      "edited": "2011-08-12T20:17:46.384Z",
                    },
                  ],
                },
                "onFetchNotes": [Function],
                "onNewNote": [Function],
                "onRemoveNote": [Function],
                "onSelectNote": [Function],
              },
            },
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": FiberNode {
                "_debugID": 1,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": [Circular],
                "child": null,
                "effectTag": 0,
                "expirationTime": 1,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div>
                                        <div
                                                            id="add-remove-navbar"
                                                            class="my-navbar"
                                        >
                                                            <button
                                                                                id="new-note-button"
                                                            >
                                                                                <i
                                                                                                    class="fas fa-plus"
                                                                                />
                                                            </button>
                                                            <button
                                                                                id="remove-note-button"
                                                            >
                                                                                <i
                                                                                                    class="fas fa-trash-alt"
                                                                                />
                                                            </button>
                                        </div>
                                        <div
                                                            id="notes-list"
                                        >
                                                            <div
                                                                                class="note note-hoverable"
                                                            >
                                                                                <div
                                                                                                    class="note-name"
                                                                                >
                                                                                                    <span
                                                                                                                        style="font-style: italic; font-weight: 100;"
                                                                                                    >
                                                                                                                        no title
                                                                                                    </span>
                                                                                </div>
                                                                                <div
                                                                                                    class="note-date-preview"
                                                                                >
                                                                                                    2011-08-12 20:17:46
                                                                                </div>
                                                            </div>
                                                            <div
                                                                                class="note note-hoverable"
                                                            >
                                                                                <div
                                                                                                    class="note-name"
                                                                                >
                                                                                                    <span
                                                                                                                        style="font-style: italic; font-weight: 100;"
                                                                                                    >
                                                                                                                        no title
                                                                                                    </span>
                                                                                </div>
                                                                                <div
                                                                                                    class="note-date-preview"
                                                                                >
                                                                                                    2011-08-12 20:17:46
                                                                                </div>
                                                            </div>
                                        </div>
                    </div>
</div>,
                  "context": Object {},
                  "current": [Circular],
                  "finishedWork": null,
                  "hydrate": false,
                  "isReadyForCommit": false,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "callbackList": null,
                  "expirationTime": 1,
                  "first": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "isForced": false,
                    "isReplace": false,
                    "next": null,
                    "nextCallback": null,
                    "partialState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "notes": Object {
                                                                          "notes": Array [
                                                                            Object {
                                                                              "_id": 0,
                                                                              "edited": "2011-08-12T20:17:46.384Z",
                                                                            },
                                                                            Object {
                                                                              "_id": 1,
                                                                              "edited": "2011-08-12T20:17:46.384Z",
                                                                            },
                                                                          ],
                                                                        },
                                                                        "onFetchNotes": [Function],
                                                                        "onNewNote": [Function],
                                                                        "onRemoveNote": [Function],
                                                                        "onSelectNote": [Function],
                                                                      }
                        }
/>,
                    },
                  },
                  "hasForceUpdate": false,
                  "isInitialized": false,
                  "isProcessing": false,
                  "last": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "isForced": false,
                    "isReplace": false,
                    "next": null,
                    "nextCallback": null,
                    "partialState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "notes": Object {
                                                                          "notes": Array [
                                                                            Object {
                                                                              "_id": 0,
                                                                              "edited": "2011-08-12T20:17:46.384Z",
                                                                            },
                                                                            Object {
                                                                              "_id": 1,
                                                                              "edited": "2011-08-12T20:17:46.384Z",
                                                                            },
                                                                          ],
                                                                        },
                                                                        "onFetchNotes": [Function],
                                                                        "onNewNote": [Function],
                                                                        "onRemoveNote": [Function],
                                                                        "onSelectNote": [Function],
                                                                      }
                        }
/>,
                    },
                  },
                },
              },
              "child": [Circular],
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                                    Object {
                                                      "notes": Object {
                                                        "notes": Array [
                                                          Object {
                                                            "_id": 0,
                                                            "edited": "2011-08-12T20:17:46.384Z",
                                                          },
                                                          Object {
                                                            "_id": 1,
                                                            "edited": "2011-08-12T20:17:46.384Z",
                                                          },
                                                        ],
                                                      },
                                                      "onFetchNotes": [Function],
                                                      "onNewNote": [Function],
                                                      "onRemoveNote": [Function],
                                                      "onSelectNote": [Function],
                                                    }
                  }
/>,
              },
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                                    <div
                                                      id="add-remove-navbar"
                                                      class="my-navbar"
                                    >
                                                      <button
                                                                        id="new-note-button"
                                                      >
                                                                        <i
                                                                                          class="fas fa-plus"
                                                                        />
                                                      </button>
                                                      <button
                                                                        id="remove-note-button"
                                                      >
                                                                        <i
                                                                                          class="fas fa-trash-alt"
                                                                        />
                                                      </button>
                                    </div>
                                    <div
                                                      id="notes-list"
                                    >
                                                      <div
                                                                        class="note note-hoverable"
                                                      >
                                                                        <div
                                                                                          class="note-name"
                                                                        >
                                                                                          <span
                                                                                                            style="font-style: italic; font-weight: 100;"
                                                                                          >
                                                                                                            no title
                                                                                          </span>
                                                                        </div>
                                                                        <div
                                                                                          class="note-date-preview"
                                                                        >
                                                                                          2011-08-12 20:17:46
                                                                        </div>
                                                      </div>
                                                      <div
                                                                        class="note note-hoverable"
                                                      >
                                                                        <div
                                                                                          class="note-name"
                                                                        >
                                                                                          <span
                                                                                                            style="font-style: italic; font-weight: 100;"
                                                                                          >
                                                                                                            no title
                                                                                          </span>
                                                                        </div>
                                                                        <div
                                                                                          class="note-date-preview"
                                                                        >
                                                                                          2011-08-12 20:17:46
                                                                        </div>
                                                      </div>
                                    </div>
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "finishedWork": null,
                "hydrate": false,
                "isReadyForCommit": false,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "type": null,
              "updateQueue": null,
            },
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "notes": Object {
                    "notes": Array [
                      Object {
                        "_id": 0,
                        "edited": "2011-08-12T20:17:46.384Z",
                      },
                      Object {
                        "_id": 1,
                        "edited": "2011-08-12T20:17:46.384Z",
                      },
                    ],
                  },
                  "onFetchNotes": [Function],
                  "onNewNote": [Function],
                  "onRemoveNote": [Function],
                  "onSelectNote": [Function],
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "notes": Object {
                    "notes": Array [
                      Object {
                        "_id": 0,
                        "edited": "2011-08-12T20:17:46.384Z",
                      },
                      Object {
                        "_id": 1,
                        "edited": "2011-08-12T20:17:46.384Z",
                      },
                    ],
                  },
                  "onFetchNotes": [Function],
                  "onNewNote": [Function],
                  "onRemoveNote": [Function],
                  "onSelectNote": [Function],
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 5,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/kamildydo/Projects/react-redux-projects/notes/src/components/Left.js",
              "lineNumber": 24,
            },
            "alternate": null,
            "child": FiberNode {
              "_debugID": 6,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/kamildydo/Projects/react-redux-projects/notes/src/components/Left.js",
                "lineNumber": 26,
              },
              "alternate": null,
              "child": FiberNode {
                "_debugID": 8,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/kamildydo/Projects/react-redux-projects/notes/src/components/Navbar.js",
                  "lineNumber": 5,
                },
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/kamildydo/Projects/react-redux-projects/notes/src/components/Navbar.js",
                    "lineNumber": 6,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 11,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/kamildydo/Projects/react-redux-projects/notes/src/components/Navbar.js",
                      "lineNumber": 7,
                    },
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "className": "fas fa-plus",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <i
                      class="fas fa-plus"
/>,
                    "tag": 5,
                    "type": "i",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <i
                      className="fas fa-plus"
/>,
                    "id": "new-note-button",
                    "onClick": [Function],
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 10,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/kamildydo/Projects/react-redux-projects/notes/src/components/Navbar.js",
                      "lineNumber": 9,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 12,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/kamildydo/Projects/react-redux-projects/notes/src/components/Navbar.js",
                        "lineNumber": 10,
                      },
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "className": "fas fa-trash-alt",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <i
                        class="fas fa-trash-alt"
/>,
                      "tag": 5,
                      "type": "i",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <i
                        className="fas fa-trash-alt"
/>,
                      "id": "remove-note-button",
                      "onClick": [Function],
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <button
                      id="remove-note-button"
>
                      <i
                                            class="fas fa-trash-alt"
                      />
</button>,
                    "tag": 5,
                    "type": "button",
                    "updateQueue": null,
                  },
                  "stateNode": <button
                    id="new-note-button"
>
                    <i
                                        class="fas fa-plus"
                    />
</button>,
                  "tag": 5,
                  "type": "button",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <button
                      id="new-note-button"
                      onClick={[Function]}
>
                      <i
                                            className="fas fa-plus"
                      />
</button>,
                    <button
                      id="remove-note-button"
                      onClick={[Function]}
>
                      <i
                                            className="fas fa-trash-alt"
                      />
</button>,
                  ],
                  "className": "my-navbar",
                  "id": "add-remove-navbar",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": <div
                  id="add-remove-navbar"
                  class="my-navbar"
>
                  <button
                                    id="new-note-button"
                  >
                                    <i
                                                      class="fas fa-plus"
                                    />
                  </button>
                  <button
                                    id="remove-note-button"
                  >
                                    <i
                                                      class="fas fa-trash-alt"
                                    />
                  </button>
</div>,
                "tag": 5,
                "type": "div",
                "updateQueue": null,
              },
              "effectTag": 1,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "onNewNote": [Function],
                "onRemoveNote": [Function],
                "onUpdateNote": undefined,
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": [Circular],
              "sibling": FiberNode {
                "_debugID": 7,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/kamildydo/Projects/react-redux-projects/notes/src/components/Left.js",
                  "lineNumber": 32,
                },
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 13,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/kamildydo/Projects/react-redux-projects/notes/src/components/Left.js",
                    "lineNumber": 34,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 15,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/kamildydo/Projects/react-redux-projects/notes/src/components/Left.js",
                      "lineNumber": 43,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 17,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/kamildydo/Projects/react-redux-projects/notes/src/components/Left.js",
                        "lineNumber": 47,
                      },
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "no title",
                        "style": Object {
                          "fontStyle": "italic",
                          "fontWeight": 100,
                        },
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <span
                        style="font-style: italic; font-weight: 100;"
>
                        no title
</span>,
                      "tag": 5,
                      "type": "span",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <span
                        style={
                                                Object {
                                                                        "fontStyle": "italic",
                                                                        "fontWeight": 100,
                                                                      }
                        }
>
                        no title
</span>,
                      "className": "note-name",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": FiberNode {
                      "_debugID": 16,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/kamildydo/Projects/react-redux-projects/notes/src/components/Left.js",
                        "lineNumber": 52,
                      },
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "2011-08-12 20:17:46",
                        "className": "note-date-preview",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <div
                        class="note-date-preview"
>
                        2011-08-12 20:17:46
</div>,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <div
                      class="note-name"
>
                      <span
                                            style="font-style: italic; font-weight: 100;"
                      >
                                            no title
                      </span>
</div>,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": "0",
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <div
                        className="note-name"
>
                        <span
                                                style={
                                                                        Object {
                                                                                                "fontStyle": "italic",
                                                                                                "fontWeight": 100,
                                                                                              }
                                                }
                        >
                                                no title
                        </span>
</div>,
                      <div
                        className="note-date-preview"
>
                        2011-08-12 20:17:46
</div>,
                    ],
                    "className": "note note-hoverable",
                    "onClick": [Function],
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 14,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/kamildydo/Projects/react-redux-projects/notes/src/components/Left.js",
                      "lineNumber": 34,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 18,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/kamildydo/Projects/react-redux-projects/notes/src/components/Left.js",
                        "lineNumber": 43,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 20,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/kamildydo/Projects/react-redux-projects/notes/src/components/Left.js",
                          "lineNumber": 47,
                        },
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "no title",
                          "style": Object {
                            "fontStyle": "italic",
                            "fontWeight": 100,
                          },
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <span
                          style="font-style: italic; font-weight: 100;"
>
                          no title
</span>,
                        "tag": 5,
                        "type": "span",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <span
                          style={
                                                    Object {
                                                                              "fontStyle": "italic",
                                                                              "fontWeight": 100,
                                                                            }
                          }
>
                          no title
</span>,
                        "className": "note-name",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": FiberNode {
                        "_debugID": 19,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/kamildydo/Projects/react-redux-projects/notes/src/components/Left.js",
                          "lineNumber": 52,
                        },
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 1,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "2011-08-12 20:17:46",
                          "className": "note-date-preview",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <div
                          class="note-date-preview"
>
                          2011-08-12 20:17:46
</div>,
                        "tag": 5,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "stateNode": <div
                        class="note-name"
>
                        <span
                                                style="font-style: italic; font-weight: 100;"
                        >
                                                no title
                        </span>
</div>,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "internalContextTag": 0,
                    "key": "1",
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <div
                          className="note-name"
>
                          <span
                                                    style={
                                                                              Object {
                                                                                                        "fontStyle": "italic",
                                                                                                        "fontWeight": 100,
                                                                                                      }
                                                    }
                          >
                                                    no title
                          </span>
</div>,
                        <div
                          className="note-date-preview"
>
                          2011-08-12 20:17:46
</div>,
                      ],
                      "className": "note note-hoverable",
                      "onClick": [Function],
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <div
                      class="note note-hoverable"
>
                      <div
                                            class="note-name"
                      >
                                            <span
                                                                  style="font-style: italic; font-weight: 100;"
                                            >
                                                                  no title
                                            </span>
                      </div>
                      <div
                                            class="note-date-preview"
                      >
                                            2011-08-12 20:17:46
                      </div>
</div>,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <div
                    class="note note-hoverable"
>
                    <div
                                        class="note-name"
                    >
                                        <span
                                                            style="font-style: italic; font-weight: 100;"
                                        >
                                                            no title
                                        </span>
                    </div>
                    <div
                                        class="note-date-preview"
                    >
                                        2011-08-12 20:17:46
                    </div>
</div>,
                  "tag": 5,
                  "type": "div",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <div
                      className="note note-hoverable"
                      onClick={[Function]}
>
                      <div
                                            className="note-name"
                      >
                                            <span
                                                                  style={
                                                                                        Object {
                                                                                                              "fontStyle": "italic",
                                                                                                              "fontWeight": 100,
                                                                                                            }
                                                                  }
                                            >
                                                                  no title
                                            </span>
                      </div>
                      <div
                                            className="note-date-preview"
                      >
                                            2011-08-12 20:17:46
                      </div>
</div>,
                    <div
                      className="note note-hoverable"
                      onClick={[Function]}
>
                      <div
                                            className="note-name"
                      >
                                            <span
                                                                  style={
                                                                                        Object {
                                                                                                              "fontStyle": "italic",
                                                                                                              "fontWeight": 100,
                                                                                                            }
                                                                  }
                                            >
                                                                  no title
                                            </span>
                      </div>
                      <div
                                            className="note-date-preview"
                      >
                                            2011-08-12 20:17:46
                      </div>
</div>,
                  ],
                  "id": "notes-list",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": <div
                  id="notes-list"
>
                  <div
                                    class="note note-hoverable"
                  >
                                    <div
                                                      class="note-name"
                                    >
                                                      <span
                                                                        style="font-style: italic; font-weight: 100;"
                                                      >
                                                                        no title
                                                      </span>
                                    </div>
                                    <div
                                                      class="note-date-preview"
                                    >
                                                      2011-08-12 20:17:46
                                    </div>
                  </div>
                  <div
                                    class="note note-hoverable"
                  >
                                    <div
                                                      class="note-name"
                                    >
                                                      <span
                                                                        style="font-style: italic; font-weight: 100;"
                                                      >
                                                                        no title
                                                      </span>
                                    </div>
                                    <div
                                                      class="note-date-preview"
                                    >
                                                      2011-08-12 20:17:46
                                    </div>
                  </div>
</div>,
                "tag": 5,
                "type": "div",
                "updateQueue": null,
              },
              "stateNode": null,
              "tag": 1,
              "type": [Function],
              "updateQueue": null,
            },
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <Unknown
                  onNewNote={[Function]}
                  onRemoveNote={[Function]}
                  onUpdateNote={undefined}
/>,
                <div
                  id="notes-list"
>
                  <div
                                    className="note note-hoverable"
                                    onClick={[Function]}
                  >
                                    <div
                                                      className="note-name"
                                    >
                                                      <span
                                                                        style={
                                                                                          Object {
                                                                                                            "fontStyle": "italic",
                                                                                                            "fontWeight": 100,
                                                                                                          }
                                                                        }
                                                      >
                                                                        no title
                                                      </span>
                                    </div>
                                    <div
                                                      className="note-date-preview"
                                    >
                                                      2011-08-12 20:17:46
                                    </div>
                  </div>
                  <div
                                    className="note note-hoverable"
                                    onClick={[Function]}
                  >
                                    <div
                                                      className="note-name"
                                    >
                                                      <span
                                                                        style={
                                                                                          Object {
                                                                                                            "fontStyle": "italic",
                                                                                                            "fontWeight": 100,
                                                                                                          }
                                                                        }
                                                      >
                                                                        no title
                                                      </span>
                                    </div>
                                    <div
                                                      className="note-date-preview"
                                    >
                                                      2011-08-12 20:17:46
                                    </div>
                  </div>
</div>,
              ],
              "className": undefined,
            },
            "memoizedState": null,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": [Circular],
            "sibling": null,
            "stateNode": <div>
              <div
                            id="add-remove-navbar"
                            class="my-navbar"
              >
                            <button
                                          id="new-note-button"
                            >
                                          <i
                                                        class="fas fa-plus"
                                          />
                            </button>
                            <button
                                          id="remove-note-button"
                            >
                                          <i
                                                        class="fas fa-trash-alt"
                                          />
                            </button>
              </div>
              <div
                            id="notes-list"
              >
                            <div
                                          class="note note-hoverable"
                            >
                                          <div
                                                        class="note-name"
                                          >
                                                        <span
                                                                      style="font-style: italic; font-weight: 100;"
                                                        >
                                                                      no title
                                                        </span>
                                          </div>
                                          <div
                                                        class="note-date-preview"
                                          >
                                                        2011-08-12 20:17:46
                                          </div>
                            </div>
                            <div
                                          class="note note-hoverable"
                            >
                                          <div
                                                        class="note-name"
                                          >
                                                        <span
                                                                      style="font-style: italic; font-weight: 100;"
                                                        >
                                                                      no title
                                                        </span>
                                          </div>
                                          <div
                                                        class="note-date-preview"
                                          >
                                                        2011-08-12 20:17:46
                                          </div>
                            </div>
              </div>
</div>,
            "tag": 5,
            "type": "div",
            "updateQueue": null,
          },
          "effectTag": 5,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "internalContextTag": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "notes": Object {
              "notes": Array [
                Object {
                  "_id": 0,
                  "edited": "2011-08-12T20:17:46.384Z",
                },
                Object {
                  "_id": 1,
                  "edited": "2011-08-12T20:17:46.384Z",
                },
              ],
            },
            "onFetchNotes": [Function],
            "onNewNote": [Function],
            "onRemoveNote": [Function],
            "onSelectNote": [Function],
          },
          "memoizedState": null,
          "nextEffect": null,
          "pendingProps": null,
          "ref": null,
          "return": FiberNode {
            "_debugID": 3,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": null,
            "child": [Circular],
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "notes": Object {
                  "notes": Array [
                    Object {
                      "_id": 0,
                      "edited": "2011-08-12T20:17:46.384Z",
                    },
                    Object {
                      "_id": 1,
                      "edited": "2011-08-12T20:17:46.384Z",
                    },
                  ],
                },
                "onFetchNotes": [Function],
                "onNewNote": [Function],
                "onRemoveNote": [Function],
                "onSelectNote": [Function],
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "notes": Object {
                  "notes": Array [
                    Object {
                      "_id": 0,
                      "edited": "2011-08-12T20:17:46.384Z",
                    },
                    Object {
                      "_id": 1,
                      "edited": "2011-08-12T20:17:46.384Z",
                    },
                  ],
                },
                "onFetchNotes": [Function],
                "onNewNote": [Function],
                "onRemoveNote": [Function],
                "onSelectNote": [Function],
              },
            },
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": FiberNode {
                "_debugID": 1,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": [Circular],
                "child": null,
                "effectTag": 0,
                "expirationTime": 1,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div>
                                        <div
                                                            id="add-remove-navbar"
                                                            class="my-navbar"
                                        >
                                                            <button
                                                                                id="new-note-button"
                                                            >
                                                                                <i
                                                                                                    class="fas fa-plus"
                                                                                />
                                                            </button>
                                                            <button
                                                                                id="remove-note-button"
                                                            >
                                                                                <i
                                                                                                    class="fas fa-trash-alt"
                                                                                />
                                                            </button>
                                        </div>
                                        <div
                                                            id="notes-list"
                                        >
                                                            <div
                                                                                class="note note-hoverable"
                                                            >
                                                                                <div
                                                                                                    class="note-name"
                                                                                >
                                                                                                    <span
                                                                                                                        style="font-style: italic; font-weight: 100;"
                                                                                                    >
                                                                                                                        no title
                                                                                                    </span>
                                                                                </div>
                                                                                <div
                                                                                                    class="note-date-preview"
                                                                                >
                                                                                                    2011-08-12 20:17:46
                                                                                </div>
                                                            </div>
                                                            <div
                                                                                class="note note-hoverable"
                                                            >
                                                                                <div
                                                                                                    class="note-name"
                                                                                >
                                                                                                    <span
                                                                                                                        style="font-style: italic; font-weight: 100;"
                                                                                                    >
                                                                                                                        no title
                                                                                                    </span>
                                                                                </div>
                                                                                <div
                                                                                                    class="note-date-preview"
                                                                                >
                                                                                                    2011-08-12 20:17:46
                                                                                </div>
                                                            </div>
                                        </div>
                    </div>
</div>,
                  "context": Object {},
                  "current": [Circular],
                  "finishedWork": null,
                  "hydrate": false,
                  "isReadyForCommit": false,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "callbackList": null,
                  "expirationTime": 1,
                  "first": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "isForced": false,
                    "isReplace": false,
                    "next": null,
                    "nextCallback": null,
                    "partialState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "notes": Object {
                                                                          "notes": Array [
                                                                            Object {
                                                                              "_id": 0,
                                                                              "edited": "2011-08-12T20:17:46.384Z",
                                                                            },
                                                                            Object {
                                                                              "_id": 1,
                                                                              "edited": "2011-08-12T20:17:46.384Z",
                                                                            },
                                                                          ],
                                                                        },
                                                                        "onFetchNotes": [Function],
                                                                        "onNewNote": [Function],
                                                                        "onRemoveNote": [Function],
                                                                        "onSelectNote": [Function],
                                                                      }
                        }
/>,
                    },
                  },
                  "hasForceUpdate": false,
                  "isInitialized": false,
                  "isProcessing": false,
                  "last": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "isForced": false,
                    "isReplace": false,
                    "next": null,
                    "nextCallback": null,
                    "partialState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "notes": Object {
                                                                          "notes": Array [
                                                                            Object {
                                                                              "_id": 0,
                                                                              "edited": "2011-08-12T20:17:46.384Z",
                                                                            },
                                                                            Object {
                                                                              "_id": 1,
                                                                              "edited": "2011-08-12T20:17:46.384Z",
                                                                            },
                                                                          ],
                                                                        },
                                                                        "onFetchNotes": [Function],
                                                                        "onNewNote": [Function],
                                                                        "onRemoveNote": [Function],
                                                                        "onSelectNote": [Function],
                                                                      }
                        }
/>,
                    },
                  },
                },
              },
              "child": [Circular],
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                                    Object {
                                                      "notes": Object {
                                                        "notes": Array [
                                                          Object {
                                                            "_id": 0,
                                                            "edited": "2011-08-12T20:17:46.384Z",
                                                          },
                                                          Object {
                                                            "_id": 1,
                                                            "edited": "2011-08-12T20:17:46.384Z",
                                                          },
                                                        ],
                                                      },
                                                      "onFetchNotes": [Function],
                                                      "onNewNote": [Function],
                                                      "onRemoveNote": [Function],
                                                      "onSelectNote": [Function],
                                                    }
                  }
/>,
              },
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                                    <div
                                                      id="add-remove-navbar"
                                                      class="my-navbar"
                                    >
                                                      <button
                                                                        id="new-note-button"
                                                      >
                                                                        <i
                                                                                          class="fas fa-plus"
                                                                        />
                                                      </button>
                                                      <button
                                                                        id="remove-note-button"
                                                      >
                                                                        <i
                                                                                          class="fas fa-trash-alt"
                                                                        />
                                                      </button>
                                    </div>
                                    <div
                                                      id="notes-list"
                                    >
                                                      <div
                                                                        class="note note-hoverable"
                                                      >
                                                                        <div
                                                                                          class="note-name"
                                                                        >
                                                                                          <span
                                                                                                            style="font-style: italic; font-weight: 100;"
                                                                                          >
                                                                                                            no title
                                                                                          </span>
                                                                        </div>
                                                                        <div
                                                                                          class="note-date-preview"
                                                                        >
                                                                                          2011-08-12 20:17:46
                                                                        </div>
                                                      </div>
                                                      <div
                                                                        class="note note-hoverable"
                                                      >
                                                                        <div
                                                                                          class="note-name"
                                                                        >
                                                                                          <span
                                                                                                            style="font-style: italic; font-weight: 100;"
                                                                                          >
                                                                                                            no title
                                                                                          </span>
                                                                        </div>
                                                                        <div
                                                                                          class="note-date-preview"
                                                                        >
                                                                                          2011-08-12 20:17:46
                                                                        </div>
                                                      </div>
                                    </div>
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "finishedWork": null,
                "hydrate": false,
                "isReadyForCommit": false,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "type": null,
              "updateQueue": null,
            },
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "notes": Object {
                    "notes": Array [
                      Object {
                        "_id": 0,
                        "edited": "2011-08-12T20:17:46.384Z",
                      },
                      Object {
                        "_id": 1,
                        "edited": "2011-08-12T20:17:46.384Z",
                      },
                    ],
                  },
                  "onFetchNotes": [Function],
                  "onNewNote": [Function],
                  "onRemoveNote": [Function],
                  "onSelectNote": [Function],
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "notes": Object {
                    "notes": Array [
                      Object {
                        "_id": 0,
                        "edited": "2011-08-12T20:17:46.384Z",
                      },
                      Object {
                        "_id": 1,
                        "edited": "2011-08-12T20:17:46.384Z",
                      },
                    ],
                  },
                  "onFetchNotes": [Function],
                  "onNewNote": [Function],
                  "onRemoveNote": [Function],
                  "onSelectNote": [Function],
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "type": [Function],
            "updateQueue": null,
          },
          "sibling": null,
          "stateNode": [Circular],
          "tag": 2,
          "type": [Function],
          "updateQueue": null,
        },
        "_reactInternalInstance": Object {},
        "context": Object {},
        "onRemoveNoteWithParams": [Function],
        "props": Object {
          "notes": Object {
            "notes": Array [
              Object {
                "_id": 0,
                "edited": "2011-08-12T20:17:46.384Z",
              },
              Object {
                "_id": 1,
                "edited": "2011-08-12T20:17:46.384Z",
              },
            ],
          },
          "onFetchNotes": [Function],
          "onNewNote": [Function],
          "onRemoveNote": [Function],
          "onSelectNote": [Function],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "notes": Object {
          "notes": Array [
            Object {
              "_id": 0,
              "edited": "2011-08-12T20:17:46.384Z",
            },
            Object {
              "_id": 1,
              "edited": "2011-08-12T20:17:46.384Z",
            },
          ],
        },
        "onFetchNotes": [Function],
        "onNewNote": [Function],
        "onRemoveNote": [Function],
        "onSelectNote": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": <div>
          <div
                    id="add-remove-navbar"
                    class="my-navbar"
          >
                    <button
                              id="new-note-button"
                    >
                              <i
                                        class="fas fa-plus"
                              />
                    </button>
                    <button
                              id="remove-note-button"
                    >
                              <i
                                        class="fas fa-trash-alt"
                              />
                    </button>
          </div>
          <div
                    id="notes-list"
          >
                    <div
                              class="note note-hoverable"
                    >
                              <div
                                        class="note-name"
                              >
                                        <span
                                                  style="font-style: italic; font-weight: 100;"
                                        >
                                                  no title
                                        </span>
                              </div>
                              <div
                                        class="note-date-preview"
                              >
                                        2011-08-12 20:17:46
                              </div>
                    </div>
                    <div
                              class="note note-hoverable"
                    >
                              <div
                                        class="note-name"
                              >
                                        <span
                                                  style="font-style: italic; font-weight: 100;"
                                        >
                                                  no title
                                        </span>
                              </div>
                              <div
                                        class="note-date-preview"
                              >
                                        2011-08-12 20:17:46
                              </div>
                    </div>
          </div>
</div>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Unknown
              onNewNote={[Function]}
              onRemoveNote={[Function]}
              onUpdateNote={undefined}
/>,
            <div
              id="notes-list"
>
              <div
                            className="note note-hoverable"
                            onClick={[Function]}
              >
                            <div
                                          className="note-name"
                            >
                                          <span
                                                        style={
                                                                      Object {
                                                                                    "fontStyle": "italic",
                                                                                    "fontWeight": 100,
                                                                                  }
                                                        }
                                          >
                                                        no title
                                          </span>
                            </div>
                            <div
                                          className="note-date-preview"
                            >
                                          2011-08-12 20:17:46
                            </div>
              </div>
              <div
                            className="note note-hoverable"
                            onClick={[Function]}
              >
                            <div
                                          className="note-name"
                            >
                                          <span
                                                        style={
                                                                      Object {
                                                                                    "fontStyle": "italic",
                                                                                    "fontWeight": 100,
                                                                                  }
                                                        }
                                          >
                                                        no title
                                          </span>
                            </div>
                            <div
                                          className="note-date-preview"
                            >
                                          2011-08-12 20:17:46
                            </div>
              </div>
</div>,
          ],
          "className": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "onNewNote": [Function],
              "onRemoveNote": [Function],
              "onUpdateNote": undefined,
            },
            "ref": null,
            "rendered": Object {
              "instance": <div
                id="add-remove-navbar"
                class="my-navbar"
>
                <button
                                id="new-note-button"
                >
                                <i
                                                class="fas fa-plus"
                                />
                </button>
                <button
                                id="remove-note-button"
                >
                                <i
                                                class="fas fa-trash-alt"
                                />
                </button>
</div>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <button
                    id="new-note-button"
                    onClick={[Function]}
>
                    <i
                                        className="fas fa-plus"
                    />
</button>,
                  <button
                    id="remove-note-button"
                    onClick={[Function]}
>
                    <i
                                        className="fas fa-trash-alt"
                    />
</button>,
                ],
                "className": "my-navbar",
                "id": "add-remove-navbar",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <button
                    id="new-note-button"
>
                    <i
                                        class="fas fa-plus"
                    />
</button>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <i
                      className="fas fa-plus"
/>,
                    "id": "new-note-button",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": <i
                        class="fas fa-plus"
/>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "className": "fas fa-plus",
                      },
                      "ref": null,
                      "rendered": Array [
                        undefined,
                      ],
                      "type": "i",
                    },
                  ],
                  "type": "button",
                },
                Object {
                  "instance": <button
                    id="remove-note-button"
>
                    <i
                                        class="fas fa-trash-alt"
                    />
</button>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <i
                      className="fas fa-trash-alt"
/>,
                    "id": "remove-note-button",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": <i
                        class="fas fa-trash-alt"
/>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "className": "fas fa-trash-alt",
                      },
                      "ref": null,
                      "rendered": Array [
                        undefined,
                      ],
                      "type": "i",
                    },
                  ],
                  "type": "button",
                },
              ],
              "type": "div",
            },
            "type": [Function],
          },
          Object {
            "instance": <div
              id="notes-list"
>
              <div
                            class="note note-hoverable"
              >
                            <div
                                          class="note-name"
                            >
                                          <span
                                                        style="font-style: italic; font-weight: 100;"
                                          >
                                                        no title
                                          </span>
                            </div>
                            <div
                                          class="note-date-preview"
                            >
                                          2011-08-12 20:17:46
                            </div>
              </div>
              <div
                            class="note note-hoverable"
              >
                            <div
                                          class="note-name"
                            >
                                          <span
                                                        style="font-style: italic; font-weight: 100;"
                                          >
                                                        no title
                                          </span>
                            </div>
                            <div
                                          class="note-date-preview"
                            >
                                          2011-08-12 20:17:46
                            </div>
              </div>
</div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="note note-hoverable"
                  onClick={[Function]}
>
                  <div
                                    className="note-name"
                  >
                                    <span
                                                      style={
                                                                        Object {
                                                                                          "fontStyle": "italic",
                                                                                          "fontWeight": 100,
                                                                                        }
                                                      }
                                    >
                                                      no title
                                    </span>
                  </div>
                  <div
                                    className="note-date-preview"
                  >
                                    2011-08-12 20:17:46
                  </div>
</div>,
                <div
                  className="note note-hoverable"
                  onClick={[Function]}
>
                  <div
                                    className="note-name"
                  >
                                    <span
                                                      style={
                                                                        Object {
                                                                                          "fontStyle": "italic",
                                                                                          "fontWeight": 100,
                                                                                        }
                                                      }
                                    >
                                                      no title
                                    </span>
                  </div>
                  <div
                                    className="note-date-preview"
                  >
                                    2011-08-12 20:17:46
                  </div>
</div>,
              ],
              "id": "notes-list",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <div
                  class="note note-hoverable"
>
                  <div
                                    class="note-name"
                  >
                                    <span
                                                      style="font-style: italic; font-weight: 100;"
                                    >
                                                      no title
                                    </span>
                  </div>
                  <div
                                    class="note-date-preview"
                  >
                                    2011-08-12 20:17:46
                  </div>
</div>,
                "key": "0",
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div
                      className="note-name"
>
                      <span
                                            style={
                                                                  Object {
                                                                                        "fontStyle": "italic",
                                                                                        "fontWeight": 100,
                                                                                      }
                                            }
                      >
                                            no title
                      </span>
</div>,
                    <div
                      className="note-date-preview"
>
                      2011-08-12 20:17:46
</div>,
                  ],
                  "className": "note note-hoverable",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": <div
                      class="note-name"
>
                      <span
                                            style="font-style: italic; font-weight: 100;"
                      >
                                            no title
                      </span>
</div>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <span
                        style={
                                                Object {
                                                                        "fontStyle": "italic",
                                                                        "fontWeight": 100,
                                                                      }
                        }
>
                        no title
</span>,
                      "className": "note-name",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": <span
                          style="font-style: italic; font-weight: 100;"
>
                          no title
</span>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "no title",
                          "style": Object {
                            "fontStyle": "italic",
                            "fontWeight": 100,
                          },
                        },
                        "ref": null,
                        "rendered": Array [
                          "no title",
                        ],
                        "type": "span",
                      },
                    ],
                    "type": "div",
                  },
                  Object {
                    "instance": <div
                      class="note-date-preview"
>
                      2011-08-12 20:17:46
</div>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "2011-08-12 20:17:46",
                      "className": "note-date-preview",
                    },
                    "ref": null,
                    "rendered": Array [
                      "2011-08-12 20:17:46",
                    ],
                    "type": "div",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": <div
                  class="note note-hoverable"
>
                  <div
                                    class="note-name"
                  >
                                    <span
                                                      style="font-style: italic; font-weight: 100;"
                                    >
                                                      no title
                                    </span>
                  </div>
                  <div
                                    class="note-date-preview"
                  >
                                    2011-08-12 20:17:46
                  </div>
</div>,
                "key": "1",
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div
                      className="note-name"
>
                      <span
                                            style={
                                                                  Object {
                                                                                        "fontStyle": "italic",
                                                                                        "fontWeight": 100,
                                                                                      }
                                            }
                      >
                                            no title
                      </span>
</div>,
                    <div
                      className="note-date-preview"
>
                      2011-08-12 20:17:46
</div>,
                  ],
                  "className": "note note-hoverable",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": <div
                      class="note-name"
>
                      <span
                                            style="font-style: italic; font-weight: 100;"
                      >
                                            no title
                      </span>
</div>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <span
                        style={
                                                Object {
                                                                        "fontStyle": "italic",
                                                                        "fontWeight": 100,
                                                                      }
                        }
>
                        no title
</span>,
                      "className": "note-name",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": <span
                          style="font-style: italic; font-weight: 100;"
>
                          no title
</span>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "no title",
                          "style": Object {
                            "fontStyle": "italic",
                            "fontWeight": 100,
                          },
                        },
                        "ref": null,
                        "rendered": Array [
                          "no title",
                        ],
                        "type": "span",
                      },
                    ],
                    "type": "div",
                  },
                  Object {
                    "instance": <div
                      class="note-date-preview"
>
                      2011-08-12 20:17:46
</div>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "2011-08-12 20:17:46",
                      "className": "note-date-preview",
                    },
                    "ref": null,
                    "rendered": Array [
                      "2011-08-12 20:17:46",
                    ],
                    "type": "div",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
